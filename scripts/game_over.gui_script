local monarch = require "monarch.monarch"
local transitions = require "monarch.transitions.gui"
local G=require("scripts.global")
local defsave = require("defsave.defsave")
local ya_scores = require("scripts.yandex.ya_leaderboards")
local ya_score=0
--local rxi_json = require("yagames.helpers.json")

local function set_scores(score)
    ya_score=score

    print("ya_score = "..tostring(ya_score))
    print("G.GetScore = "..tostring(G.GetScore()))

    gui.set_text(gui.get_node("score"), tostring(G.GetScore()))

    if G.GetScore()>ya_score or ya_score==nil then
        ya_scores.set_score_handler(self, G.GetScore())
        gui.set_text(gui.get_node("top_score"), "Новый рекорд!")
    else
        gui.set_text(gui.get_node("top_score"), "ЛУЧШИЙ "..tostring(ya_score))
    end
end

function init(self)
    print(msg.url())
    msg.post(".", "acquire_input_focus")
    self.transition = transitions.create() -- note that no node is passed to transition.create()!
    .show_in(gui.get_node("root"), transitions.slide_in_bottom, gui.EASING_OUTQUAD, 0.5, 0.1)
    .show_out(gui.get_node("root"), transitions.slide_out_top, gui.EASING_INQUAD, 0.5, 0)

    ya_scores.get_player_entry_handler()
end

function final(self)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
    self.transition.handle(message_id, message, sender)

    if message_id == hash("ya_score") then
        set_scores(message.score)
    end
end

function on_input(self, action_id, action)
    if action_id == hash("touch") and action.pressed then
        local btn_restart = gui.get_node("restart")
        local btn_liderboard=gui.get_node("liderboard")
        if gui.pick_node(btn_restart, action.x, action.y) then 
            monarch.show(hash("game"))
        end
        if gui.pick_node(btn_liderboard, action.x, action.y) then 
            monarch.show(hash("liderboard"))
        end
    end
 
end
